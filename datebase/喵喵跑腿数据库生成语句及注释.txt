CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,         -- 用户ID
    account VARCHAR(255) NOT NULL,                 -- 账号
    username VARCHAR(50) NOT NULL,                  -- 用户名
    password VARCHAR(255) NOT NULL,                 -- 密码
    phone_number VARCHAR(15),                       -- 手机号码
    avatar_url VARCHAR(255),                        -- 头像链接
    user_role ENUM('publisher', 'runner') DEFAULT 'publisher', -- 用户身份（发布者/跑腿者）
    status ENUM('active', 'inactive') DEFAULT 'active', -- 用户状态（激活/未激活）
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 注册时间
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- 更新时间
);
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,        -- 订单ID
    user_id INT,                                    -- 发布者用户ID (外键)
    item_name VARCHAR(100),                         -- 物品名称
    item_image_url VARCHAR(255),                     -- 物品图片链接
    start_location VARCHAR(255),                     -- 起始位置
    end_location VARCHAR(255),                       -- 目的地位置
    price DECIMAL(10, 2),                            -- 订单价格
    phone_number VARCHAR(15),                        -- 联系电话（接单后显示给跑腿者）
    status ENUM('pending', 'completed', 'cancelled') DEFAULT 'pending', -- 订单状态
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 发布订单时间
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 更新时间
    FOREIGN KEY (user_id) REFERENCES users(user_id) -- 外键约束（关联发布者）
);
CREATE TABLE order_assignments (
    assignment_id INT AUTO_INCREMENT PRIMARY KEY,    -- 接单ID
    order_id INT,                                    -- 订单ID (外键)
    runner_id INT,                                   -- 跑腿者用户ID (外键)
    assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 接单时间
    completed_at TIMESTAMP,                          -- 完成时间
    status ENUM('assigned', 'in_progress', 'completed') DEFAULT 'assigned', -- 订单状态（已接单/进行中/已完成）
    FOREIGN KEY (order_id) REFERENCES orders(order_id),  -- 外键约束（关联订单）
    FOREIGN KEY (runner_id) REFERENCES users(user_id)    -- 外键约束（关联跑腿者）
);
CREATE TABLE password_changes (
    change_id INT AUTO_INCREMENT PRIMARY KEY,       -- 修改记录ID
    user_id INT,                                    -- 用户ID (外键)
    old_password VARCHAR(255),                      -- 旧密码
    new_password VARCHAR(255),                      -- 新密码
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 修改时间
    FOREIGN KEY (user_id) REFERENCES users(user_id) -- 外键约束（关联用户）
);
CREATE TABLE posts (
    post_id INT AUTO_INCREMENT PRIMARY KEY,         -- 帖子ID
    user_id INT NOT NULL,                           -- 用户ID (外键)
    text_content TEXT,                              -- 文字内容
    image_url VARCHAR(255),                         -- 图片链接
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 发布时间
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 更新时间
    FOREIGN KEY (user_id) REFERENCES users(user_id) -- 外键约束（关联用户）
);
